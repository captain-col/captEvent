/*! \page oaEventHistory History for the oaEvent Package 

\section Version v4r1

Freeze information:
   - Freeze Date: Fri May  4 13:45:56 2007
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

This is the first stable release of the oaEvent library after restructuring
the code to make it more suitable for long term use.  For "correct" user
code, the changes are largely source compatible with v3, but there are
minor API changes.

The required changes fell into two categories:

1) The classes providing user access to hits have had an inheritance change
   so that the primary User class is the same for simulated and real data.
   The new primary user hit class is ND::TSingleHit which provides the
   implementation for data storage.  It is the base class for ND::TDataHit and
   ND::TMCHit which are stub classes providing type safety and distinguishing
   between data and MC.  Real analysis "should not" be using either
   ND::TDataHit or ND::TMCHit.  Code that is violating the rules can be found by a
   grep for casts to either ND::TDataHit or ND::TMCHit.  

2) The structure of the MC hits have been changed to save the starting and
   stopping point of each MC step.  This was done to allow more detailed
   simulations of the TPC and scintillator detector responses.  The
   definition of a ND::TMCHit has been changed to use the ND::TG4VHit base class
   for each of the contributors and to save a pointer so that different
   types of ND::TG4VHit objects can be saved in a ND::TMCHit.

3) A new class has been defined to handle wave forms from the TPC and FGD
   electronics.  From the users point of view, the ND::TMultiHit class saves a
   vector of ND::TSingleHit objects.

4) Classes have been changed to use less space.

5) Many individual bug fixes and code cleanups.

This freeze does not include the up-coming addition of new classes to save
reconstructed tracks. 

ROADMAP for v4r3: 1) Include the new classes for reconstructed tracks,
particles and vertices.  These class will allow the ND::TOATrack class to be
deprecated.  2) Improve the handling of the geometry indicies.  The
expectation is that this will not require a hit format change, but may
require minor changes in user code.  One of the goals is to modify the
geometry access to allow for detector alignment corrections.  This is
supported by ND::TGeoManager, but has not been used in nd280 code.



\section oaEvent_v4r3_history Version v4r3

Freeze information:
   - Freeze Date: Fri Jul 27 20:12:14 2007
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

Update ND::TG4PrimaryVertex so that it works better with multiple vertices in a
full spill.

Add ND::TTPCPadManager to handle the pad geometry within a micro mega module.
This will translate between module and pad addresses and global geometry
numbering.  


\section oaEvent_v4r5_history Version v4r5

Freeze information:
   - Freeze Date: Fri Aug 31 10:24:06 2007
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

ND::TTPCPadManager: Apply several fixes to pass tests applied as part of
elecSim.  The main bugs had to do with not properly restoring the
ND::TGeoManager state, and with allowing pad numbers to be out of range.

ND::THit: Improve the ND::THit::ls() output to print all of the ND::THit
fields.  This adds better output for the "dump" option.

ND::TSingleHit: Fix the initialization of the position, spread and
uncertainty for TPC hits.

nd280EventLoop: Make sure that exceptions are properly caught so that files
can be closed before exiting.


\section oaEvent_v4r7_history Version v4r7

Freeze information:
   - Freeze Date: Mon Oct  8 14:46:24 2007
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

Add a set of log and debug output macros.  These are controlled by the
ND::TND280Log class, and are patterned after the log4cplus library.  The
output file, and amount of output can be controlled.

There was a bug in the calculation of the hit position uncertainty (caught
by T.Lindner).  


\section oaEvent_v5r1_history Version v5r1

Freeze information:
   - Freeze Date: Wed Oct 17 09:55:04 2007
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

First freeze using the ND namespace

This adapts all of the oaEvent classes to be in the ND namespace, and is
\em fully incompatible with previous versions of the library.  This means
that this version of the library cannot read files written by oaEvent v1,
v2, v3, or v4.

Since this library is incompatible with previous version, many of the
legacy interfaces have been removed.

This release changes the return type for the ND::TDatum::Get() methods.  These
methods previously returned a ND::TBorrowed, and now return a ND::THandle.  The
TBorrowed template is deprecated and will be removed in a future release.
For now, including the ND::TBorrowed header file will generate a compilation
warning. 

\section oaEvent_v5r3_history Version v5r3

Freeze information:
   - Freeze Date: Mon Dec  3 18:41:23 2007
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

Freeze in preparation to produce MC results for the January 2008
collaboration meeting and PAC review.  The most notable change since v5r1
is the addition of classes to save output of general reconstruction
algorithms.  The ND::TReconCluster, ND::TReconShower, and ND::TReconTrack objects
should be rather stable.  The ND::TReconVertex class needs some work, but is
not likely to change much.  The ND::TReconPID class is still rather immature.  


\section oaEvent_v5r5_history Version v5r5

Freeze information:
   - Freeze Date: Wed Jan 30 17:30:00 2008
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

Since version v5r3 there have been several minor bug-fixes and a couple
of additional features.  The new version is backward compatible to v5r3.

- Updates to work with ROOT v5r18: The newest root removed several include
  files that were added to the TObject.h.  As a result, oaEvent had to be
  updated to directly include these files.

- Updates to handle stricter C++ compilers: Several files had to include
  either cmath, or unistd.

- ND::TData convenience routine: A method was added to ND::TData so that to allow
  ND::THandle objects to be added directly.  Previously adding ND::THandle objects
  to a ND::TData object required the caller to explicitly release the handle
  ownership.

- ND::TDatum bug fix: Added protection against creating ND::TDatum without a name.
  This doesn't change the on disk format and is backward compatible.
  ND::TDatum objects created without a name can now be accessed using the
  string "unnamed".

- ND::THitSelection feature enhancement: A method has been added to make sure
  that only one copy of a hit exists in a ND::THitSelection.  The older
  interface remains unchanged.

- ND::THitSelection bug fix: Make sure that a hit is valid before it is added
  to the hit selection.  If a hit is not valid, then throw and exception.
  This prevents unexpected segmentation faults that take place far from the
  actual bug location.

- ND::TOADatabase bug fix: Fix compiler warning messages, and make sure that
  the current event is used if the data base is called without an explicit
  input event.

- ND::TOATrack: Mark as deprecated in comments.

- ND::TReconBase: Allow the ROOT browser to browse ND::TReconBase objects.

- ND::TReconState: Update to work with ROOT 5.18.  This is a backward
  compatible change.


\section oaEvent_v5r7_history Version v5r7

Freeze information:
   - Freeze Date: Tue Feb 12 10:48:45 2008
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

Bug fix release for v5r5 including:

- Fix the calculation of the ND::TReconCluster::FillFromHits charge
  distribution moments

- Fix the calculation of the ND::TReconCluster::FillFromHits position and
  variance.

- Fix the finding of the ND::TComboHit geometry node id.


\section oaEvent_v5r9_history Version v5r9

Freeze information:
   - Freeze Date: Fri Aug 22 15:51:11 2008
   - Freeze User: mcgrew
   - Freeze Host: boxer.local

Freeze to support MDC0.  The main user visible difference is that more truth
information is available from the neutrino interaction vertex.  This also
includes the preliminary version of the midas bank interface, and begins
the transition to a save set of tagging routines for use on the MAC.


\section oaEvent_v6r1_history Version v6r1

Freeze information:
   - Freeze Date: Thu Nov  6 15:30:33 2008
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Freeze oaEvent to allow other packages to freeze using v6.  

This freeze includes the full deprecation of ND::TOATrack, several minor (but
incompatible) changes to ND::TReconBase, and the first introduction of the
fixed geometry identifiers that will replace the ROOT TGeoManager node ids
as volume identifiers.

Of particular note, this include the first usable midas interface.  These
classes are currently being used for the FGD and TPC beam tests.


\section oaEvent_v6r3_history Version v6r3

Freeze information:
   - Freeze Date: Wed Mar  4 09:57:24 2009
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Final release freeze for version 6.  This introduces the ND::TND280Context,
fixes to ND::TReconPID, the basic ND::TDigit infrastructure, the ability to read
ND::TMidasFiles via nd280EventLoop, and better control of the geometry file. 

\section oaEvent_v7r1_history Version v7r1

Freeze information:
   - Freeze Date: Fri May 15 00:00:50 2009
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Introduce backward incompatible changes to the file format.

- Introduce ND::TGeometryId to provide identifiers for well defined geometric
objects.  The geometry id attached to a particular volume will remain
constant through out an experimental epoch.  This also introduces the
infrastructure needed to support geometry identifiers.


- Modify the definition of a ND::THit to use the geometry id associated with
the volume for the ND::THit.

- Remove several deprecated classes and methods.  In addition some
mis-named classes are renamed.
 

\section oaEvent_v7r3_history Version v7r3

Freeze information:
   - Freeze Date: Thu Sep 17 17:37:29 2009
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

This freeze captures several code clean-up commits since the previous
stable version.  The freeze has waited far too long.

- Provide several validation scripts.  The current scripts concentrate on
  validating processing of midas files vs root files.

- Clean up the geometry id implementation.  Some generally useful private
  code has been moved out of ND::TGeomIdManager.

- ND::TChannelId has been significantly expanded based on using it during
  summer cosmic ray running and beam tests.

- ND::THit and friends have had test code added for the ND::TDigitProxy
  implementation.  The geometry node id is once again accessible from
  ND::THit.

- ND::TND280Event has new ND::TND280Event::GetDigits() method to provide an
  easy interface to ND::TOADatabase::Get().Digits().CacheDigits().  This is
  now the preferred method for accessing the digits in an event.

Plus many other minor bug fixes found during a summer of use.


\section oaEvent_v7r5_history Version v7r5

Freeze information:
   - Freeze Date: Tue Oct 27 15:40:01 2009
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

This freeze includes:

- The introduction of error propagation into the ND::TCorrValues class.  The
  ND::TCorrValues class provides a way to represent a vector of values and
  their covariance matrix.  It has optimized handling of single values and
  a standard deviation (or variance).  Basic arithmetic operations are
  defined on ND::TCorrValues objects (e.g. a+b, &c).

- The channel identifier has been added as a ND::THit field.  For hit types
  where it exists, it can be accessed using ND::THit::GetChannelId().  The
  accessing the channel id does not require access to the digits.  

- A convenience method has been added to ND::TND280Event to access the digits.
  This hides the low level complications of ND::TDigitManager::CacheDigits().
  The new method ND::TND280Event::GetDigits() will return an null
  ND::THandle<ND::TDigitContainer> object if the digits do not exist.

- Infrastructure to allow TGeoManager objects to be loaded based on their
  SHA1 message digest has been added.  This includes methods to calculate
  the geometry hash, find a file containing the requested geometry, and
  load the requested geometry.  A utility has been added to extract the
  geometry from an event file and save it in an external file.

- This release also includes assorted bug-fixes.


\section oaEvent_v7r7_history Version v7r7

Freeze information:
   - Freeze Date: Thu Nov 19 19:21:54 2009
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

New features in this release:

- Add the ND::TTPCmcDigit class to handle TPC digits generated by elecSim.

- Add lookup of geometry files using a hash value, as well as caching the
files during package setup.

\section oaEvent_v7r9_history Version v7r9

Freeze information:
   - Freeze Date: Thu Dec 17 14:51:17 2009
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

This is a feature release:

- Add support for the INGRID geometry identifiers

- Add support for geometry definitions saved outside of the event file.
  The geometries are identified using a hash code generated from the volume
  positions.  This updates the support for getting the geometry files from
  repo.nd280.org (but only if network is available).  The files are cached
  after download.  If the files aren't available or out of date, a warning
  is entered into the log and oaEvent continues with "best effort".

- Add support for aligning the current geometry.

- Add tests for the handling of the geometry.

- Add support for the TPC Monte Carlo digits.


\section oaEvent_v7r11_history Version v7r11

Freeze information:
   - Freeze Date: Sat Jan 16 22:35:25 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Add new features required to handle neutrino data:

- Add clock and trigger fields to the ND::TRawDataHeader class.  In addition, a
  new off-line header class as been added containing a summary of the
  header information in ND::TND280RawEvent.  The new ND::TND280Event::Header class
  is intended for use in the off-line calibration. 

- Modify the way a MIDAS event is built into a ND::TND280RawEvent that will be
  added to a ND::TND280Event.  In particular, there is now a constructor to
  convert a ND::TND280RawEvent pointer into a ND::TND280Event pointer.  During the
  conversion, the off-line header is built from the on-line header.
 
- Define bits in the ND::TND280Context partition field.  For a raw event, this
  field is filled based on which clock module banks are present.

- Enhance ND::TCorrValues so that it provides an interface to check if a
  variance corresponds to a free or fixed parameter.

- Clean up the ND::TDatum::RemoveDatum interface and define the returned
  values.


\section oaEvent_v7r13_history Version v7r13

Freeze information:
   - Freeze Date: Fri Jan 29 09:51:38 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug fix release:

    - Add a default constructor to ND::TTPCDigitHeader so it can be read by
      ROOT

    - Implement ND::TMidasFile::IsOpen() to override inherited
      ND::TVInputFile::IsOpen() 

    - Add documentation to ND::TReconPID particle types

    - Fix the pad pitch in the geometry.

    - Fix a buffer overflow in ND::TND280RawEvent which used deprecated
      sprintf.  

\section oaEvent_v7r15_history Version v7r15

Freeze information:
   - Freeze Date: Tue Feb  2 21:07:15 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Feature release:

- ND::TGeometryId: Add new geometry identifier definition for the FGD
  scintillator layers.

- EoaCore: Enhance the exception "what" message produced by EoaCore (the
  base class for all ND280 exceptions) so that it produces a small
  backtrace of where the exception was thrown.

- ND::THitSelection: Add a method "RemoveHit" to remove a hit from a hit
  selection, but not cause an error if the hit is not in the selection.

- ND::TND280Log: Make sure the output stream is fully reset after printing a
  message.

- Kludge around missing sub-run field.  The XRUN (ND::TRunInfoBank) bank field
for this is not being filled by the DAQ, so infer the sub-run from the
midas file name.

Bug fixes:

- Fix the ND::TPIDState copy constructor to copy the full track and shower
  states (time was not being copied).

- Fix the ND::TReconCluster, ND::TReconPID, and ND::TReconBase ls() methods
  to print all of the local information.


\section oaEvent_v7r17_history Version v7r17

Freeze information:
   - Freeze Date: Fri Feb 12 11:17:48 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

New Features:

- Add ND280TriggerWord.hxx to define the bits in the trigger word.

- ND::TTFBDigit: Add convenience methods to check if the TDC is good,
  ND::TTFBDigit::HasGoodTDC(), and to calculate the full TDC value,
  ND::TTFBDigit::GetTDC().

- ND::TND280Event: Add CheckTrigger() method as a better API to check the
  trigger word.

Bug fixes:

- ND::TMidasFile and ND::TND280RawEvent: Fix the sub-run number kludge
  (really do it this time [I hope]).

- ND::TReconCluster::FillFromHits(): Fix the filling of the cluster moments and
  the cluster position variance.  I doubt the previous calculation was
  being used since it was quite wrong.  This is now being used in the
  p0dRecon.

- Fix plot event display of clusters so to debug the cluster moments. 

- Fix the 200TripTRawEvent validation which was b    eing to strict.

Code Cleanup:

- Move the filling of the raw and global headers into independent methods.


\section oaEvent_v7r19_history Version v7r19

Freeze information:
   - Freeze Date: Mon Feb 22 16:42:35 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug fixes in v7r19:

- ND::EoaCore : Make sure to use std::free() for memory that is allocated
  using std::malloc().  The memory returned by backtrace_symbols() is
  allocated using malloc, but was being deleted using "delete".  This fixes
  a bug reported by Alex Finch.

- ND::TDigitManager : Add protection against ND::TDigitFactory objects that
  return with an error condition.  The error condition is trapped with a
  message, and an NULL digit container handle is returned indicating that
  the digits are not available for that factory.  This fixes a bug reported
  by Melody Ravonel.

New Features in v7r19:

- plot-event.exe : Significant cleanups to help debug the filling of
  reconstruction objects.  In particular the information for individual
  nodes is now plotted, and displayed for debugging.

- ND::TCorrValues : Make the ND::TCorrValues::IsFixed() and
  ND::TCorrValues::IsFree() methods static so they can be used to check if
  recon object variances correspond to free or fixed parameters.  

- ND::TND280Log : Add control over the indentation of log messages through
  ND::TND280Log::IncreaseIndentation() and
  ND::TND280Log::DecreaseIndentation().

- ND::TReconState : Provide a method in ND::TReconState to validate the
  state (in particular, check that the covariance is valid).


\section oaEvent_v7r21_history Version v7r21

Freeze information:
   - Freeze Date: Wed Mar  3 14:37:19 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug fixs:

  - When converting a track or shower state to a PID, don't make guesses!
    For instance, the position and direction values can be directly
    copied, but the momentum cannot be converted without knowing the field
    (or energy calibration).  Parameters like momentum are now set to be
    free. 

  - In the event loop, make sure that the Finalize method isn't called with
    an invalid output file.  The event loop can now support multiple output
    files.

  - Fix the 010makecheck.sh validation so that it verifies the location of
    the cmt directory.  

  - Follow the DAQ and set the record type to Data unless otherwise
    specified.  


Features:

  - Update the event loop tutorial with a bit more information

  - Expose the current geometry state using GetGeometryState().


\section oaEvent_v7r23_history Version v7r23

Freeze information:
   - Freeze Date: Fri Mar 19 16:54:02 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug Fixes:
    
* Fix the pad spacing in the TPC MM geometry

Features:

* Add number of events processed during long running event loops.  This can
  be disabled using the -q option

* Add command line option to the event loop to help debug THandle memory
  leaks.

* Mark deprecated methods with a compiler warning (only works for GCC).


\section oaEvent_v7r25_history Version v7r25

Freeze information:
   - Freeze Date: Wed Apr 21 21:42:07 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug Fixes:

 - Correct the handling of Recon Object nodes for tracks, pids and showers.
This was affecting how the reconstruction objects were being saved by the
P0D.

Features:

 - Define bits to flag invalid charges and times in a THit.

 - Add an ls() method to the THandle so that handles are explicitly listed
 in dump-event.

 - Add command line option to the event loop to help debug THandle memory
   leaks.

 - Add methods to check the dimensionality of reconstruction objects. 


\section oaEvent_v7r27_history Version v7r27

Freeze information:
   - Freeze Date: Wed Jul  7 15:04:32 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug Fixes:

* Add better error and validity checking to TDigitProxy so that invalid
proxies are flagged.

* Add check to the THit::SetDigit() to make sure that the channel
identifier is correct.  If a THit is created from an invalid TDigitProxy
the channel identifier should be set using SetChannelId().

* Fix a range check on the TPC Pad range in the channel identifier.

* Fix the type of ND::TND280Context::Invalid to agree with the
  TND280Context method return and field types.

Enhancements:

* Add an option to the event loop to look for a particular event number in
a file.

* Add an MC Header class so that ND280MC can save the event state into the
file. 

* Add the TND280Context::IsMC() and TND280Context::IsDetector() to check if
  the event came from the MC or detector.  These only work if the context
  partition is valid.

* Add a new TSHAHashValue class to save the hash value associated with a
geometry. 

* Add a new field to the event to save the hash value for the geometry used to
calibrate the event.

* Make the ND::TND280Event::Header fields protected so the can be set by
  elecSim. 


\section oaEvent_v8r1_history Version v8r1

Freeze information:
   - Freeze Date: Thu Aug 12 12:24:39 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

This is a major version change to upgrade the handling of the ROOT geometry
and alignment.

Features:

 - The geometry hash code is calculated and saved with the root geometry.  

 - The alignment id is saved with the geometry.  This is implemented using
   the new TAlignmentId class.

 - The geometry hash code and alignment id used to calibrate an event is
   saved with the event so that the calibration can be reproduced in later
   processing.  

 - There can now be more than one geometry per file.  The warnings in the
   TOADatabase::Geometry() documentation that the geometry can change are
   now very important.  Error messages are printed if a geometry that may
   be incorrect is accessed, and user code will need to be fixed.

 - The geometry management has been moved out of TOADatabase and into the
   TGeomIdManager to allow more flexibility.

 - The TOADatabase::GeometryChange interface has been fully implemented and
   its use is encouraged.  

 - TTFBChannelId: Add explicit channel identifiers for when the TFB,
   TripChip, or Channel is being ignored.

 - TND280Context has a new method to determine if the context is valid.  

Important Bug Fixes:

 - THitSelection::RemoveHit() has been corrected to remove the hit from the
   selection.  


\section oaEvent_v8r3_history Version v8r3

Freeze information:
   - Freeze Date: Tue Sep  7 15:03:16 2010
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

Bug Fixes:

  - Fix handling of geometry changes.  This is now a bit more
  discriminating about when to actually load a new geometry

New Features:

  - Add method to clear the list of GeometryChange callbacks

  - Add TDataLink to make a weak link between objects in an event

  - Add tests of geometry handling.


\section oaEvent_v8r5_history Version v8r5

Freeze information:
   - Freeze Date: Wed Feb  2 17:42:44 2011
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

This is primarily a maintenance release to capture bug fixes already
applied to the v8r3 patch series, but it also includes several relatively
minor new features.  

FEATURES:

* Add an interim geometry containing the P0D and Barrel ECals to the
  GEOMETRY.LIST.  This will allow the reconstruction to be debugged in
  preparation for a final release.  This geometry will be overridden in a
  pre-release patch.

* Add a "list" option to dump-event.exe so that a list of events in a file
  can be easily generated.

* Modify nd280-get-geometry to use the local version of the geometry list
  file instead of downloading the list from repo.nd280.org.

* Throw an exception if an invalid geometry identifier is used. 

* Add the INGRID proton tracker to the geometry identifier definitions.
 
* Add a method so that the TND280Context can return a MYSQL compadible time
  value.  

* Change TND280Output::Close() so that the file information is only printed
  when the loglevel is not set to QUIET.

* Add methods to get the 

* Add methods to get and set the direction and position covariance of a
  reconstruction state.

BUG FIXES:

* Fix a memory leak in plot-event.exe

* Make sure the TDigitProxy cache is set when a new proxy is created.  This
  will allow the proxy to work in the program that creates it even if there
  are too many digits for it to function properly.  This provides a
  workaround to the oaCalib handling of pedestal events.

* Reduce the severity level of an invalid TDigitProxy so that we don't get
  flooded with error messages when a pedestal event is calibrated.

* Fix the logic on when the geometry should be reloaded to prevent it from
  changing between MC events.

* Fix the TP0DIdFinder so that geometry identifiers are only assigned to
  the proper water target.  Previously ids were assigned to the targets as
  well as the left and right water bags (the sequence ran from 0 to 74
  instead of 0 to 24).

* Print the full symbol name as part of an exception backtrace.

Most of these bug fixes have already be ported in the to v8r3 patch series.


\section oaEvent_v8r7_history Version v8r7

Freeze information:
   - Freeze Date: Mon Sep 26 14:21:51 2011
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

File Size Optimization Changes:

There were several changes to make the output file size take up less space.
These are mostly low level technical changes, but a few will be visible to
user code.  Older v8 files can still be read by this version, but new files
can not be read by older versions of oaEvent.  The overall saving seems to
be about 15% for NEUT events generated in the magnet.

* Change the data element class in TCorrValues from a double to a float.
  This causes a small backward incompatibility for code that is using the
  ND::TCorrValues::Vector and ND::TCorrValues::Matrix sub-classes.  The
  ROOT schema evolution can't handle the type change in these classes since
  they are actually just typedefs such as TMatrixSymT<Element> where "Element"
  is float or double.  Any code using Vector or Matrix should be changed to
  directly construct the correct object.  For example

  TMatrixSymT<ND::TCorrValues::Element> blah;

 * Most of the TG4<*> class private members have been changed to save
   floats instead of doubles.  The external interfaces have not
   changed.

Other Changes:

 * Add a field to the TND280MCHeader to save the "beam intensity" for the
   event.  The value is provided by ND280MC (which reads it from the
   control file).

 * The nominal value of the magnetic field has been added to the
   TND280MCHeader.  This can be used to provide an overall normalization to
   the field map.

 * Various minor bug fixes.  In particular, the amount of output produced
   by ls() has been reduced, and several warnings have been fixed. 


\section oaEvent_v8r9_history Version v8r9

Freeze information:
   - Freeze Date: Wed Jul 11 13:18:45 2012
   - Freeze User: mcgrew
   - Freeze Host: boxer.physics.sunysb.edu

New Features:

** Implement the copy constructors for the TReconState classes
   (TClusterState, TShowerState, TTrackState, TPIDState, and TVertexState).

** Add the ability to skip events to TVInputFile and its children.  For a
   ROOT oaEvent file, the skip operation is now very quick.  The
   nd280EventLoop skip option uses this new feature.

** Update plot-event.exe so that it shows more information about the
   reconstruction objects.

** Add accessors to the ND::GeomID namespace so that the internal bit
   fields in the TGeometryId objects can be unpacked.  This completely
   removes the need for the public version of TGeometryId::GetField and
   TGeometryId::SetField.  

** Overload TReconCluster::FillFromHits() to accept
   ND::THitSelection::const_iterators for the hits.  Change the original
   fingerprint to use a "const THitSelection&" instead of a
   "THitSelection&".  

** Implement copy constructors for the TIntegerDatum and TRealDatum
   classes.

Deprecated:

** The TGeometryId::GetField() and TGeometryId::SetField() methods have
   been deprecated and will be removed after v8r9.  They are
   replaced by accessor functions defined in the ND::GeomId namespaces.  

** The TND280EventLoopFunction::Finalize(TND280Output& file) method has
   been marked as deprecated and will be removed after v8r9.  It is
   replaced by TND280EventLoopFunction::Finalize(TND280Output* file).

** Remove deprecated methods: THit::GetGeoNodeId, TChannelId::AsInt,
   TTPCChannelId::GetTPC, TTPCChannelId::SetTPC, TTPCChannelId::GetMM,
   TTPCChannelId::SetMM, TTPCChannelId::GetMMChannel,
   TTPCChannelId::SetMMChannel.  These can be re-included by setting CPP
   flags.  See header files for details.

Bug Fixes:

** nd280-get-geometry.sh will now correctly handle the case where
   repo.nd280.org is unavailable.  This means that the setup scripts will
   run even if there are network problems.

** Fix TReconBase so that contained integer and real datum objects are
   correctly copied.

*/