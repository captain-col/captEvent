package captEvent
# This package provides the core I/O and support functions for all of the
# CAPTAIN software and must be kept stable.  As much as possible, backward
# compatibility must be maintained.  Please contact the package manager
# before making changes.  In particular, contact the package manager
# before designing (or especially implementing) any structural changes so
# we can make sure that all of the impacts of the change are understood by
# the entire group.  A new stable version should be created before
# significant changes are made.  Email enquiries should be directed to
# captain-sw@simpa.lbl.gov.
#
# Changes in captEvent affect the output format of events.  Incompatible
# changes can make older data unreadable.
#
author Clark McGrew <clark.mcgrew@stonybrook.edu>

# This is required for the documentation.
manager Clark McGrew <clark.mcgrew@stonybrook.edu>

# The packages used by this one.  Only direct dependencies should be
# included. 
use ROOT * LCG_Interfaces
use captainPolicy 
use testBase

# Build the version file.
document version version *.cxx *.hxx *_LinkDef.h

# Build the registration prototype.
document register register 
macro_append register_dependencies " version "

# Build all of the ROOT dictionaries.
document linkdef linkdef *.hxx *_LinkDef.h
macro_append linkdef_dependencies " register "

# Build the documentation.
document doxygen doxygen -group=documentation *.cxx *.hxx ../doc/*.dox

# The library to build
library captEvent *.cxx *.hxx $(bin)dict/*.cxx
macro_append captEvent_dependencies " linkdef "

# Build information used by packages that use this one.
macro captEvent_cppflags " -DCAPTEVENT_USED "
macro captEvent_linkopts " -L$(CAPTEVENTROOT)/$(captEvent_tag) -lcaptEvent "
macro captEvent_stamps " $(captEventstamp) $(linkdefstamp) "

# The paths to find this library and it's executables
path_remove LD_LIBRARY_PATH "$(CAPTEVENTROOT)" 
path_prepend LD_LIBRARY_PATH "$(CAPTEVENTROOT)/$(captEvent_tag)"

path_remove PATH "$(CAPTEVENTROOT)"
path_prepend PATH "$(CAPTEVENTROOT)/$(captEvent_tag)"

# Applications to build
application dump-event ../app/dump-event.cxx
apply_pattern dependency target=dump-event depends=captEvent

application strip-geom ../app/strip-geom.cxx 
apply_pattern dependency target=strip-geom depends=captEvent

application validate-geometry ../app/validate-geometry.cxx
apply_pattern dependency target=validate-geometry depends=captEvent

# Test applications to build
application captEventTUT -check ../test/captEventTUT.cxx ../test/tut*.cxx
apply_pattern dependency target=captEventTUT depends=captEvent

# Register fragments needed to register libraries with TManager.
make_fragment register -header=register_header -trailer=register_trailer
make_fragment linkdef -header=linkdef_header -trailer=linkdef_trailer 
