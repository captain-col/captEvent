#ifndef TMCChannelId_hxx_seen
#define TMCChannelId_hxx_seen

#include "TChannelId.hxx"

namespace CP {
    class TMCChannelId;
};

///Channel identifier class for channels generated by the MC.  This is
///constructed so that the channel can be trivially translated into a geometry
///identifier. 
class CP::TMCChannelId : public CP::TChannelId {
public:
    /// Construct from a raw UInt_t
    explicit TMCChannelId(UInt_t id = 0);

    /// Constructor to specialise a channel identifier as an MC identifier. 
    explicit TMCChannelId(const CP::TChannelId& src);

    /// Construct an MC channel dentifier from its electronics-space
    /// coordinates.  The type is 0) for wires and 1) for PMTs.  The plane is
    /// 0) for X, 1) for U, and 2) for V (it's ignored for PMTs.  The "wire"
    /// is the wire number of the PMT number.
    TMCChannelId(UInt_t type,  UInt_t plane,  UInt_t wire);

    virtual ~TMCChannelId();

    /// Format as a human readable string
    virtual std::string AsString() const; 

    /// Get the type of this channel.  The type 0) is for wires, and 1) is for
    /// light sensors.
    UInt_t GetType() const;

    /// Get the plane for this channel.
    UInt_t GetSequence() const;

    /// Get the number (usually of the wire) for this channel.
    UInt_t GetNumber() const;

protected:

    /// @{ Define the sub-detector specific part of the channel id.  The
    /// sub-detector specific part of the channel id is a 25 bit field with
    /// bits number from 0 (lsb) to 24 (msb).  The sub-fields are defined
    ///
    /// TTT ppppppp ccccccccccccccc
    ///
    ///    - T(3)  Bit 24-22:  The type of field.  For now this is 
    ///                              0) wires, and 1) light sensors.
    ///    - p(7)  Bit 15-21: The field (it's the plane for wires, otherwise
    ///                              zero).
    ///    - c(15) Bit 14- 0: The number for the field (0-32767).
    /// 
    /// Note: The shift and the least significant bit (lsb) must be the same.
    enum BitDefinitions {
        kTypeMSB         = 24,    kTypeLSB         = 22,
        kSequenceMSB     = 21,    kSequenceLSB     = 15,
        kNumberMSB       = 14,    kNumberLSB       = 0
    };
    /// @}

private:		

    /// Get the type of this channel.
    void SetType(int val);

    /// Get the plane for this channel.
    void SetSequence(int val);

    /// Get the wire for this channel.
    void SetNumber(int val);

    ClassDef(TMCChannelId, 1)
};
#endif 
